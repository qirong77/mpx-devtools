<template>
    <view>
        <view
            class="mpx-devtools-container {{ isDrageMove ? 'mpx-devtools-container--floating' : '' }} {{ isCollapsed ? 'mpx-devtools-container--collapsed' : '' }}"
            style="{{ isDrageMove ? 'left: ' + dragPosition.x + '%; top: ' + dragPosition.y + '%; width: ' + containerSize.width + 'rpx; height: ' + containerSize.height + 'rpx;' : '' }}">
            <!-- Â§¥ÈÉ®Âå∫Âüü -->
                <view class="mpx-devtools-header {{ isCollapsed ? 'mpx-devtools-header--collapsed' : '' }}"
                bindtouchstart="{{ isDrageMove ? 'onTouchStart' : '' }}"
                catchtouchmove="{{ isDrageMove ? 'onTouchMove' : '' }}"
                bindtouchend="{{ isDrageMove ? 'onTouchEnd' : '' }}">
                <!-- ÊãñÊãΩÊåáÁ§∫Âô® -->
                <view wx:if="{{ isDrageMove }}" class="mpx-devtools-drag-indicator">
                    <text class="mpx-devtools-drag-icon">‚ãÆ‚ãÆ</text>
                </view>
                <!-- Â§¥ÈÉ®È°∂ÈÉ®ÔºàÊ†áÈ¢ò+Áä∂ÊÄÅÔºâ -->
                <view class="mpx-devtools-header__top">
                    <view class="mpx-devtools-title-section">
                        <text class="mpx-devtools-title">üå≤ MPX DevTools</text>
                    </view>
                    <!-- Âà∑Êñ∞ÊåâÈíÆÔºàÈùûÊäòÂè†Êó∂ÊòæÁ§∫Ôºâ -->
                    <!-- <view wx:if="{{ !isCollapsed }}" class="mpx-devtools-status-section" style="margin-left: 4px;">
                        <text class="mpx-devtools-update-time" bindtap="updateComponentTree">üïí Âà∑Êñ∞</text>
                    </view> -->
                    <!-- ÊäòÂè†ÊåâÈíÆ -->
                    <view class="mpx-devtools-status-section">
                        <view class="mpx-devtools-collapse-btn" bindtap="toggleCollapseGlobal">
                            <text class="mpx-devtools-collapse-btn__icon">{{ isCollapsed ? 'üìã' : 'üìÅ' }}</text>
                            <text class="mpx-devtools-collapse-btn__text">{{ isCollapsed ? 'Â±ïÂºÄ' : 'Êî∂Ëµ∑' }}</text>
                        </view>
                    </view>
                </view>
                <!-- ÁéØÂ¢ÉËÆæÁΩÆÂå∫ÂüüÔºàÈùûÊäòÂè†Êó∂ÊòæÁ§∫Ôºâ -->
                <view wx:if="{{ !isCollapsed && showOsimEnvInput }}" class="mpx-devtools-env">
                    <view class="mpx-devtools-env__label">
                        <text>osim{{ '__' }}</text>
                        <text class="mpx-devtools-env__current">{{ ' ' + osimEnv || 'Êú™ËÆæÁΩÆ' }}</text>
                    </view>
                    <view class="mpx-devtools-env__controls">
                        <input class="mpx-devtools-env__input" bindblur="onOsimEnvInputBlur" type="number"
                            placeholder="ËæìÂÖ•ÁéØÂ¢ÉÁºñÂè∑ÔºàÂ¶ÇÔºö1Ôºâ" value="{{ osimEnvInput }}" bindinput="onOsimEnvInput" />
                        <text class="mpx-devtools-env__btn" bindtap="confirmOsimEnv">‰øÆÊîπ</text>
                    </view>
                </view>
            </view>
            <view style="flex: 1;position: relative;overflow: hidden;">
                <!-- ‰∏ª‰ΩìÂÜÖÂÆπÂå∫ÔºàÈùûÊäòÂè†Êó∂ÊòæÁ§∫Ôºâ -->
                <view class="mpx-devtools-main" wx:if="{{ !isCollapsed }}">
                    <view wx:if="{{ !isCollapsed }}" class="mpx-devtools-filter-container">
                        <view class="mpx-devtools-filter-wrapper">
                            <text class="mpx-devtools-filter-wrapper__icon">üîç</text>
                            <input class="mpx-devtools-filter-wrapper__input" placeholder="ÊêúÁ¥¢ÁªÑ‰ª∂ÂêçÁß∞ÊàñÊï∞ÊçÆÂÄº"
                                value="{{ filterText }}" bindinput="onFilterInput" bindconfirm="onFilterConfirm" />
                            <!-- Ê∏ÖÈô§ÊåâÈíÆÔºàÊúâËøáÊª§ÊñáÊú¨Êó∂ÊòæÁ§∫Ôºâ -->
                            <view wx:if="{{ filterText }}" class="mpx-devtools-filter-wrapper__clear-btn"
                                bindtap="clearFilter">
                                <text class="mpx-devtools-filter-wrapper__clear-icon">√ó</text>
                            </view>
                        </view>
                    </view>
                    <!-- ÁªÑ‰ª∂Ê†ëÂÆπÂô® -->
                    <view class="mpx-devtools-tree-container" wx:if="{{ visibleNodesWithDisplayName.length > 0 }}">
                        <view wx:for="{{ visibleNodesWithDisplayName }}" wx:key="index" class="mpx-devtools-tree-node"
                            style="padding-left: {{item.level * 20}}px;">
                            <view class="mpx-devtools-tree-node__content">
                                <!-- ËäÇÁÇπÊäòÂè†ÊåâÈíÆ -->
                                <view class="mpx-devtools-tree-node__collapse-btn"
                                    style="opacity: {{ item.hasChildren ? 1 : 0.3 }}" bindtap="toggleCollapse"
                                    data-index="{{ index }}">
                                    <text class="mpx-devtools-tree-node__collapse-icon">{{ item.collapsed ? '+' : '-'
                                        }}</text>
                                </view>
                                <!-- ËäÇÁÇπ‰ø°ÊÅØÊåâÈíÆ -->
                                <view class="mpx-devtools-tree-node__info-btn" bindtap="showComponentInfo"
                                    data-index="{{ index }}">
                                    <text class="mpx-devtools-tree-node__info-icon">!</text>
                                </view>
                                <!-- ËäÇÁÇπÊñá‰ª∂‰ø°ÊÅØ -->
                                <view class="mpx-devtools-tree-node__file-container">
                                    <text
                                        class="mpx-devtools-tree-node__text {{ item.isHighlighted ? 'mpx-devtools-tree-node__text--highlighted' : '' }}">{{
                                            item.displayFileName }}</text>
                                    <!-- ÂåπÈÖçÁöÑÂ±ûÊÄßÔºàÊï∞ÊçÆÊêúÁ¥¢Êó∂ÊòæÁ§∫Ôºâ -->
                                    <view wx:if="{{ item.matchedProperties.length > 0 }}"
                                        class="mpx-devtools-tree-node__matched-properties">
                                        <text wx:for="{{ item.matchedProperties }}" wx:key="prop"
                                            class="mpx-devtools-tree-node__matched-prop">{{
                                                item
                                            }}</text>
                                    </view>
                                </view>
                            </view>
                        </view>
                    </view>
                    <!-- Á©∫Áä∂ÊÄÅÔºàÊó†ÁªÑ‰ª∂Êï∞ÊçÆÊó∂ÊòæÁ§∫Ôºâ -->
                    <view wx:else class="mpx-devtools-empty-state">
                        <text class="mpx-devtools-empty-state__text">ÊöÇÊó†ÁªÑ‰ª∂Êï∞ÊçÆ</text>
                        <text class="mpx-devtools-empty-state__hint">ËØ∑ÁÇπÂáªÂè≥‰∏äËßíÂà∑Êñ∞ÊåâÈíÆËé∑ÂèñÊúÄÊñ∞ÁªÑ‰ª∂Ê†ë<br />Êàñ‰øÆÊîπËøáÊª§Êù°‰ª∂</text>
                    </view>
                </view>
            </view>


            <!-- Êãâ‰º∏ÊéßÂà∂Âô®ÔºàÊÇ¨ÊµÆ+ÈùûÊäòÂè†Êó∂ÊòæÁ§∫Ôºâ -->
                <view wx:if="{{ isDrageMove && !isCollapsed }}" class="mpx-devtools-resize-controls">
                <view class="mpx-devtools-resize-handle mpx-devtools-resize-handle--br" bindtouchstart="onResizeStart"
                    catchtouchmove="onTouchMove" bindtouchend="onTouchEnd" data-action="resize">
                    <text class="mpx-devtools-resize-handle__icon">‚ü≤</text>
                </view>
            </view>
        </view>

        <!-- ÁªÑ‰ª∂‰ø°ÊÅØÂºπÁ™óÔºàÊòæÁ§∫Êó∂Ê∏≤ÊüìÔºâ -->
        <view wx:if="{{ showInfoModal }}" class="mpx-devtools-modal-overlay" bindtap="closeInfoModal">
            <view class="mpx-devtools-modal" catchtap="preventClose">
                <!-- ÂºπÁ™óÂ§¥ÈÉ® -->
                <view class="mpx-devtools-modal__header">
                    <text class="mpx-devtools-modal__title">ÁªÑ‰ª∂‰ø°ÊÅØ</text>
                    <view class="mpx-devtools-modal__close-btn" bindtap="closeInfoModal">
                        <text class="mpx-devtools-modal__close-icon">√ó</text>
                    </view>
                </view>
                <mpx-devtool-tab bind:tabchange="onTabChange" tabList="{{ tabList }}" activeTab="{{ activeTab }}">

                </mpx-devtool-tab>
                <!-- ÂºπÁ™óÂÜÖÂÆπ -->
                <view class="mpx-devtools-modal__content">
                    <!-- ÁªÑ‰ª∂Ë∑ØÂæÑ -->
                    <view class="mpx-devtools-component-path">
                        <view class="mpx-devtools-copy-btn" bindtap="copyPropertyValue"
                            data-value="{{ currentComponentInfo.fileSrc }}" data-key="{{ 'Ë∑ØÂæÑ' }}">
                            <text class="mpx-devtools-copy-btn__icon">üìã</text>
                        </view>
                        <text class="mpx-devtools-component-path__label">ÁªÑ‰ª∂Ë∑ØÂæÑ</text>
                        <text class="mpx-devtools-component-path__text">{{ currentComponentInfo.fileSrc }}</text>
                    </view>

                    <view class="mpx-devtools-section">
                        <view class="mpx-devtools-section__content">
                            <mpx-devtools-data wx:if="{{ activeTab === 'props' }}"
                                list="{{ currentComponentInfo.props }}" type="props" />
                            <mpx-devtools-data wx:if="{{ activeTab === 'data' }}" list="{{ currentComponentInfo.data }}"
                                type="data" />
                            <mpx-devtools-data wx:if="{{ activeTab === 'computed' }}"
                                list="{{ currentComponentInfo.computed }}" type="computed" />

                        </view>
                    </view>
                </view>
            </view>
        </view>
    </view>
</template>
<script type="application/json">
{
    "usingComponents": {
        "mpx-devtool-tab": "./components/mpx-devtool-tab.mpx",
        "mpx-devtools-data": "./components/mpx-devtools-data.mpx",
    }
}
</script>
<script>
import mpx, { createComponent, ONHIDE, UNMOUNTED, BEFOREUNMOUNT,MOUNTED } from '@mpxjs/core'
  import mpx_devtools from '@mpxjs/core'

createComponent({
    data: {
        isDrageMove: true,
        componentTree: null,
        flattenTree: [],
        visibleNodes: [],
        updateTime: '',
        timer: null,
        showInfoModal: false,
        currentComponentInfo: null,
        filterText: '',
        rootInstance: null,
        dataSearchResults: new Map(), // Â≠òÂÇ®Êï∞ÊçÆÊêúÁ¥¢ÁªìÊûú
        isCollapsed: false,
        // ÊãñÊãΩÁõ∏ÂÖ≥Êï∞ÊçÆ
        dragPosition: { x: 50, y: 50 }, // ÊÇ¨ÊµÆÊó∂ÁöÑ‰ΩçÁΩÆ (ÁôæÂàÜÊØî)
        containerSize: { width: 600, height: 400 }, // ÂÆπÂô®Â∞∫ÂØ∏ (rpx)
        isDragging: false,
        isResizing: false,
        dragStartPos: { x: 0, y: 0 },
        dragOffset: { x: 0, y: 0 },
        resizeStartPos: { x: 0, y: 0 },
        resizeStartSize: { width: 0, height: 0 },
        activeTab: 'props',
        showOsimEnvInput: process.env.VUE_APP_ENV === 'osim',
        osimEnv: '',
        osimEnvInput: '',
    },

    methods: {
        clearTimer() {
            if (this.timer) {
                clearInterval(this.timer)
                this.timer = null
                console.debug('MPX DevTools timer cleared')
            }
            // Ê∏ÖÁêÜËäÇÊµÅËÆ°Êó∂Âô®
            if (this._throttleTimer) {
                clearTimeout(this._throttleTimer)
                this._throttleTimer = null
            }
        },
        onTabChange(data) {
            const tab = data.detail?.activeTab;
            this.activeTab = tab;
        },
        onOsimEnvInput(e) {
            this.osimEnvInput = e.detail.value;
        },
        onOsimEnvInputBlur(e) {
            const isValid = /[\d]+/.test(e.detail.value);
            if (!isValid) {
                mpx.showToast({
                    title: 'ËØ∑ËæìÂÖ•Ê≠£Á°ÆÁöÑÁéØÂ¢ÉÂÄº',
                    icon: 'none',
                    duration: 1500
                });
                this.osimEnvInput = this.osimEnv;
                return;
            }
        },
        confirmOsimEnv() {
            const isValid = /[\d]+/.test(this.osimEnvInput);
            if (!isValid) {
                mpx.showToast({
                    title: 'ËØ∑ËæìÂÖ•Ê≠£Á°ÆÁöÑÁéØÂ¢ÉÂÄº',
                    icon: 'none',
                    duration: 1500
                });
                return;
            }
            this.osimEnv = this.osimEnvInput;
            mpx.setStorage({
                key: 'osimEnv',
                data: this.osimEnv
            });
            mpx.reLaunch();
        },
        // Êú¨Âú∞Â≠òÂÇ®Áõ∏ÂÖ≥ÊñπÊ≥ï
        saveToStorage() {
            try {
                const storageData = {
                    isCollapsed: this.isCollapsed,
                    dragPosition: this.dragPosition,
                    containerSize: this.containerSize
                }
                mpx.setStorageSync('mpx-devtools-settings', JSON.stringify(storageData))
            } catch (error) {
                console.debug('Save storage failed:', error)
            }
        },

        loadFromStorage() {
            try {
                const storageData = mpx.getStorageSync('mpx-devtools-settings')
                if (storageData) {
                    const data = JSON.parse(storageData)
                    if (typeof data.isCollapsed === 'boolean') {
                        this.isCollapsed = data.isCollapsed
                    }
                    if (data.dragPosition && typeof data.dragPosition.x === 'number' && typeof data.dragPosition.y === 'number') {
                        this.dragPosition = { ...data.dragPosition }
                    }
                    if (data.containerSize && typeof data.containerSize.width === 'number' && typeof data.containerSize.height === 'number') {
                        this.containerSize = { ...data.containerSize }
                    }
                }
            } catch (error) {
                console.debug('Load storage failed:', error)
            }
        },

        // ÊãñÊãΩÁõ∏ÂÖ≥ÊñπÊ≥ï
        onTouchStart(e) {
            if (!this.isDrageMove) return

            const touch = e.touches[0]
            const target = e.currentTarget.dataset.action

            if (target === 'resize') {
                this.isResizing = true
                this.resizeStartPos = {
                    x: touch.pageX,
                    y: touch.pageY
                }
                this.resizeStartSize = { ...this.containerSize }
            } else {
                this.isDragging = true
                this.dragStartPos = {
                    x: touch.pageX,
                    y: touch.pageY
                }
            }
        },

        onTouchMove(e) {
            if (!this.isDrageMove) return

            // Â∞ùËØïÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®Âíå‰∫ã‰ª∂ÂÜíÊ≥°ÔºåÂ¢ûÂä†ÂÖºÂÆπÊÄß‰øùÊä§
            try {
                if (e && typeof e.preventDefault === 'function') {
                    e.preventDefault()
                }
                if (e && e.stopPropagation && typeof e.stopPropagation === 'function') {
                    e.stopPropagation()
                }
            } catch (err) {
                // Êüê‰∫õÂ∞èÁ®ãÂ∫èÁéØÂ¢É‰∏ã‰∫ã‰ª∂ÂØπË±°ÂèØËÉΩ‰∏çÂÆåÂÖ®ÂÖºÂÆπÔºåËøôÈáåÂÆâÂÖ®ÈôçÁ∫ß
                // console.debug('preventDefault/stopPropagation not available', err)
            }

            const touch = e.touches[0]

            // ËäÇÊµÅÂ§ÑÁêÜÔºåÂáèÂ∞ëÂç°È°ø
            if (this._throttleTimer) return
            this._throttleTimer = setTimeout(() => {
                this._throttleTimer = null
            }, 16) // Á∫¶60fps

            if (this.isResizing) {
                // Êãâ‰º∏ÈÄªËæë
                const deltaX = touch.pageX - this.resizeStartPos.x
                const deltaY = touch.pageY - this.resizeStartPos.y

                let newWidth = this.resizeStartSize.width + deltaX * 2 // rpxËΩ¨Êç¢
                let newHeight = this.resizeStartSize.height + deltaY * 2 // rpxËΩ¨Êç¢


                this.containerSize = {
                    width: newWidth,
                    height: newHeight
                }
            } else if (this.isDragging) {
                // ÊãñÊãΩÈÄªËæë
                const systemInfo = mpx.getWindowInfo()
                const windowWidth = systemInfo.windowWidth
                const windowHeight = systemInfo.windowHeight

                const deltaX = touch.pageX - this.dragStartPos.x
                const deltaY = touch.pageY - this.dragStartPos.y

                let newX = this.dragPosition.x + (deltaX / windowWidth) * 100
                let newY = this.dragPosition.y + (deltaY / windowHeight) * 100

                this.dragPosition = { x: newX, y: newY }

                // Êõ¥Êñ∞Ëµ∑Âßã‰ΩçÁΩÆ
                this.dragStartPos = {
                    x: touch.pageX,
                    y: touch.pageY
                }
            }
        },
        validatePosition() {
            // ‰ªÖÂú®ÊÇ¨ÊµÆÊ®°Âºè‰∏ãÊâçÈúÄË¶ÅÊ†°È™å‰ΩçÁΩÆ
            if (!this.isDrageMove) return
            const isUnvisible = this.dragPosition.x < 0 || this.dragPosition.x > 100 || this.dragPosition.y < 0 || this.dragPosition.y > 100
            if (isUnvisible) {
                console.debug('Position out of bounds, resetting to center.')
                this.dragPosition = { x: 10, y: 10 }
                this.containerSize = { width: 400, height: 300 }
            }

        },
        onTouchEnd(e) {
            if (!this.isDrageMove) return

            this.isDragging = false
            this.isResizing = false
            this.saveToStorage() // ÊãñÊãΩÊàñÊãâ‰º∏ÁªìÊùüÂêé‰øùÂ≠ò
        },

        // Êãâ‰º∏ÊåâÈíÆÁöÑËß¶Êë∏‰∫ã‰ª∂
        onResizeStart(e) {
            if (!this.isDrageMove) return

            const touch = e.touches[0]
            this.isResizing = true
            this.resizeStartPos = {
                x: touch.pageX,
                y: touch.pageY
            }
            this.resizeStartSize = { ...this.containerSize }
        },

        toggleCollapseGlobal() {
            this.isCollapsed = !this.isCollapsed;
            this.saveToStorage(); // ÊäòÂè†Áä∂ÊÄÅÊîπÂèòÊó∂‰øùÂ≠ò
        },

        updateComponentTree() {
            try {
                if (!mpx.mpxDevTools || typeof mpx.mpxDevTools.getInstanceTreeRoot !== 'function') {
                    mpx.showToast({
                        title: 'MPX DevTools API Êú™Â∞±Áª™',
                        icon: 'none'
                    })
                    return
                }

                const tree = mpx.mpxDevTools.getInstanceTreeRoot()

                // Ê£ÄÊü•ÊòØÂê¶Ëé∑ÂèñÂà∞ÊúâÊïàÁöÑÁªÑ‰ª∂Ê†ë
                if (!tree) {
                    console.debug('No component tree available yet')
                    return
                }

                mpx.mpxDevToolsComponentRoot = tree
                this.componentTree = tree
                this.flattenTree = this.flattenTreeData(tree, 0, -1, [])
                this.updateVisibleNodes()
                this.updateTime = this.formatTime(new Date())
            } catch (error) {
                console.debug('Error updating component tree:', error)
            }
            this.validatePosition();
        },

        flattenTreeData(node, level, parentIndex = -1, allNodes = []) {
            if (!node || !node.component) return []

            try {
                // ÂÆâÂÖ®Âú∞Ëé∑ÂèñÊñá‰ª∂Ë∑ØÂæÑ
                const fileSrc = node.component?.MpxDevtoolsComponentInfo?.__mpx_file_src__ || 'unknown'
                if (fileSrc === 'unknown') {
                    console.debug('Component with unknown fileSrc:', node)
                }
                const hasChildren = node.children && node.children.length > 0

                const currentIndex = allNodes.length
                const currentNode = {
                    level: level,
                    fileSrc: fileSrc,
                    hasChildren: hasChildren,
                    collapsed: false,
                    parentIndex: parentIndex
                }

                allNodes.push(currentNode)

                // ÈÄíÂΩíÂ§ÑÁêÜÂ≠êËäÇÁÇπ
                if (hasChildren) {
                    node.children.forEach(child => {
                        this.flattenTreeData(child, level + 1, currentIndex, allNodes)
                    })
                }

                return allNodes
            } catch (error) {
                console.error('Error flattening tree node:', error, node)
                return allNodes
            }
        },

        updateVisibleNodes() {
            const visible = []

            // Â¶ÇÊûúÊúâÊêúÁ¥¢Êù°‰ª∂ÔºåÂÖàÊâßË°åÊï∞ÊçÆÊêúÁ¥¢
            if (this.filterText) {
                this.performCombinedSearch()
            } else {
                // Ê∏ÖÁ©∫ÊêúÁ¥¢ÁªìÊûú
                this.dataSearchResults.clear()
            }

            for (let i = 0; i < this.flattenTree.length; i++) {
                const node = this.flattenTree[i]

                // Ê£ÄÊü•Áà∂ËäÇÁÇπÊòØÂê¶Ë¢´ÊäòÂè†
                let isVisible = true
                let checkIndex = node.parentIndex

                while (checkIndex >= 0 && isVisible) {
                    const parentNode = this.flattenTree[checkIndex]
                    if (parentNode.collapsed) {
                        isVisible = false
                    }
                    checkIndex = parentNode.parentIndex
                }

                // Ê£ÄÊü•ÊòØÂê¶ÈÄöËøáËøáÊª§Êù°‰ª∂
                if (isVisible && this.filterText) {
                    const displayFileName = this.getDisplayFileName(node.fileSrc)
                    const componentMatched = displayFileName.toLowerCase().includes(this.filterText.toLowerCase())

                    // Ê£ÄÊü•ÊòØÂê¶Âú®Êï∞ÊçÆÊêúÁ¥¢ÁªìÊûú‰∏≠
                    const searchResult = this.dataSearchResults.get(node.fileSrc)
                    const dataMatched = searchResult && searchResult.isInPath

                    // ÁªÑ‰ª∂ÂêçÁß∞ÊàñÊï∞ÊçÆÂÄº‰ªª‰∏ÄÂåπÈÖçÂç≥ÂèØÊòæÁ§∫
                    if (!componentMatched && !dataMatched) {
                        isVisible = false
                    }
                }

                if (isVisible) {
                    const searchResult = this.dataSearchResults.get(node.fileSrc)
                    visible.push({
                        ...node,
                        index: i, // ‰øùÂ≠òÂéüÂßãÁ¥¢ÂºïÁî®‰∫éÊäòÂè†Êìç‰Ωú
                        isHighlighted: searchResult && searchResult.hasMatch,
                        matchedProperties: searchResult ? searchResult.matchedProperties : []
                    })
                }
            }

            this.visibleNodes = visible
        },

        toggleCollapse(e) {
            const visibleIndex = parseInt(e.currentTarget.dataset.index)
            const node = this.visibleNodes[visibleIndex]

            // Âè™ÊúâÊúâÂ≠êÁªÑ‰ª∂ÁöÑËäÇÁÇπÊâçÂÖÅËÆ∏ÊäòÂè†
            if (!node.hasChildren) {
                return
            }

            const originalIndex = node.index

            console.log('Toggle collapse:', {
                visibleIndex,
                originalIndex,
                currentState: this.flattenTree[originalIndex].collapsed
            })

            // ÂàáÊç¢ÊäòÂè†Áä∂ÊÄÅ
            this.flattenTree[originalIndex].collapsed = !this.flattenTree[originalIndex].collapsed

            // Êõ¥Êñ∞ÂèØËßÅËäÇÁÇπ
            this.updateVisibleNodes()
        },

        showComponentInfo(e) {
            const visibleIndex = parseInt(e.currentTarget.dataset.index)
            const node = this.visibleNodes[visibleIndex]

            // Ëé∑ÂèñÁªÑ‰ª∂ÂÆû‰æãÊï∞ÊçÆ
            const componentInstance = this.getComponentInstance(node)
            if (!componentInstance) {
                mpx.showToast({
                    title: 'Êó†Ê≥ïËé∑ÂèñÁªÑ‰ª∂‰ø°ÊÅØ',
                    icon: 'none'
                })
                return
            }

            const componentInfo = this.parseComponentInfo(componentInstance, node.fileSrc)
            // ‰øùÂ≠òÁªÑ‰ª∂ÂÆû‰æãÂºïÁî®ÔºåÁî®‰∫éÂêéÁª≠ÁöÑÂ±ïÂºÄÊìç‰Ωú
            this.currentComponentInfo = {
                ...componentInfo,
                componentInstance: componentInstance
            }
            this.showInfoModal = true
        },

        getComponentInstance(node) {
            // Ê†πÊçÆÁªÑ‰ª∂Ê†ëÊü•ÊâæÂØπÂ∫îÁöÑÁªÑ‰ª∂ÂÆû‰æã
            try {
                const findComponent = (treeNode, targetSrc) => {
                    if (!treeNode) return null

                    const fileSrc = treeNode.component?.MpxDevtoolsComponentInfo?.__mpx_file_src__
                    if (fileSrc === targetSrc) {
                        return treeNode.component
                    }

                    if (treeNode.children) {
                        for (let child of treeNode.children) {
                            const result = findComponent(child, targetSrc)
                            if (result) return result
                        }
                    }
                    return null
                }

                return findComponent(this.componentTree, node.fileSrc)
            } catch (error) {
                console.error('Error finding component:', error)
                return null
            }
        },

        parseComponentInfo(component, fileSrc) {
            const props = this.parseObjectProperties(component.MpxDevtoolsComponentInfo?.props || {}, 'props', component)
            const data = this.parseObjectProperties(component.MpxDevtoolsComponentInfo?.data || {}, 'data', component)
            const computed = this.parseObjectProperties(component.MpxDevtoolsComponentInfo?.computed || {}, 'computed', component)

            return {
                fileSrc: fileSrc,
                props: props,
                data: data,
                computed,
                propsCount: Object.keys(component.MpxDevtoolsComponentInfo?.props || {}).length,
                dataCount: Object.keys(component.MpxDevtoolsComponentInfo?.data || {}).length,
                computedCount: Object.keys(component.MpxDevtoolsComponentInfo?.computed || {}).length
            }
        },

        parseObjectProperties(obj, basePath = '', instance) {
            const result = []
            for (let key in obj) {
                if (key === '__mpx_file_src__') {
                    continue
                }
                const rawValue = instance[key]
                const type = this.getValueType(rawValue)
                const path = basePath ? `${basePath}.${key}` : key

                // Âà§Êñ≠ÊòØÂê¶ÊòØÂèØÂ±ïÂºÄÁöÑÁ±ªÂûã
                const isExpandable = type === 'Array' || type === 'Object'
                const isExpanded = false // ÈªòËÆ§ÊäòÂè†Áä∂ÊÄÅ

                // ‰∏∫ÈïøÂÜÖÂÆπÂàõÂª∫‰∏çÂêåÁöÑÊòæÁ§∫ÁâàÊú¨
                let collapsedValue, expandedValue

                if (isExpandable) {
                    collapsedValue = this.formatValue(rawValue, true) // ÊäòÂè†Áä∂ÊÄÅ
                    expandedValue = this.getFullFormattedValue(rawValue) // Â±ïÂºÄÁä∂ÊÄÅÔºåÊòæÁ§∫ÂÆåÊï¥ÂÜÖÂÆπ
                } else {
                    collapsedValue = expandedValue = this.formatValue(rawValue, true)
                }

                // Ê£ÄÊü•ÊòØÂê¶ÂåπÈÖçÂΩìÂâçÊêúÁ¥¢Êù°‰ª∂
                let isMatched = false
                if (this.filterText) {
                    const searchText = this.filterText.toLowerCase()
                    isMatched = this.searchInValue(rawValue, searchText)
                }

                const node = {
                    key: key,
                    value: rawValue,
                    displayValue: collapsedValue, // ÈªòËÆ§ÊòæÁ§∫ÊäòÂè†Áä∂ÊÄÅ
                    collapsedValue: collapsedValue, // ÊäòÂè†Êó∂ÁöÑÊòæÁ§∫
                    expandedValue: expandedValue, // Â±ïÂºÄÊó∂ÁöÑÊòæÁ§∫
                    valueColor: this.getValueColor(type),
                    type: type,
                    path: path,
                    isExpandable: isExpandable,
                    expanded: isExpanded,
                    children: [],
                    isMatched: isMatched // Ê∑ªÂä†ÂåπÈÖçÊ†áËØÜ
                }
                result.push(node)
            }

            return result
        },

        getValueType(value) {
            if (value === null) return 'null'
            if (value === undefined) return 'undefined'
            if (typeof value === 'string') return 'string'
            if (typeof value === 'number') return 'number'
            if (typeof value === 'boolean') return 'boolean'
            if (typeof value === 'function') return 'function'
            if (Array.isArray(value)) return 'Array'
            if (typeof value === 'object') return 'Object'
            return 'unknown'
        },

        formatValue(value, isCollapsed = true) {
            const type = this.getValueType(value)
            switch (type) {
                case 'string':
                    return `"${value}"`
                case 'number':
                case 'boolean':
                    return String(value)
                case 'null':
                    return 'null'
                case 'undefined':
                    return 'undefined'
                case 'function':
                    return 'function() {...}'
                case 'Array':
                    if (isCollapsed) {
                        return `Array(${value.length})`
                    }
                    try {
                        return this.formatJsonWithIndent(value)
                    } catch (error) {
                        console.debug('Error stringifying array:', error)
                        return `Array(${value.length})`
                    }
                case 'Object':
                    if (isCollapsed) {
                        const keys = Object.keys(value)
                        return `{${keys.length} ${keys.length === 1 ? 'key' : 'keys'}}`
                    }
                    try {
                        return this.formatJsonWithIndent(value)
                    } catch (error) {
                        console.debug('Error stringifying object:', error)
                        const keys = Object.keys(value)
                        return `{${keys.length} ${keys.length === 1 ? 'key' : 'keys'}}`
                    }
                default:
                    return String(value)
            }
        },

        // Ê†ºÂºèÂåñ JSON Âπ∂Ê∑ªÂä†Ê≠£Á°ÆÁöÑÁº©Ëøõ
        formatJsonWithIndent(value) {
            return this.getFullFormattedValue(value)
        },

        // Ëé∑ÂèñÂÆåÊï¥Ê†ºÂºèÂåñÁöÑÂÜÖÂÆπ
        getFullFormattedValue(value) {
            try {
                const jsonStr = JSON.stringify(value, null, 2)
                // Ê∑ªÂä†ÈÄÇÂΩìÁöÑÁº©Ëøõ‰ª•Âú®Â∞èÁ®ãÂ∫è‰∏≠Ê≠£Á°ÆÊòæÁ§∫
                return jsonStr.split('\n').map((line, index) => {
                    if (index === 0) return line
                    return `  ${line}` // Ê∑ªÂä†‰∏§‰∏™Á©∫Ê†ºÁöÑÁº©Ëøõ
                }).join('\n')
            } catch (error) {
                console.debug('Error formatting value:', error)
                const type = this.getValueType(value)
                if (type === 'Array') {
                    return `Array(${value.length}) [Êó†Ê≥ïÂ∫èÂàóÂåñ]`
                } else if (type === 'Object') {
                    const keys = Object.keys(value)
                    return `{${keys.length} ${keys.length === 1 ? 'key' : 'keys'}} [Êó†Ê≥ïÂ∫èÂàóÂåñ]`
                }
                return String(value)
            }
        },

        getValueColor(type) {
            switch (type) {
                case 'string': return '#d14'
                case 'number': return '#005cc5'
                case 'boolean': return '#d73a49'
                case 'null':
                case 'undefined': return '#6f42c1'
                case 'function': return '#e36209'
                case 'Array': return '#22863a'
                case 'Object': return '#6f42c1'
                default: return '#333'
            }
        },

        toggleObjectExpand(e) {
            const path = e.currentTarget.dataset.path
            const type = e.currentTarget.dataset.type

            console.log('Toggle expand:', { path, type })

            // Ê†πÊçÆÁ±ªÂûãÊâæÂà∞ÂØπÂ∫îÁöÑÊï∞ÊçÆÊ∫ê
            let targetArray = null
            switch (type) {
                case 'props':
                    targetArray = this.currentComponentInfo.props
                    break
                case 'data':
                    targetArray = this.currentComponentInfo.data
                    break
                case 'computed':
                    targetArray = this.currentComponentInfo.computed
                    break
                default:
                    return
            }

            // Êü•ÊâæÂπ∂ÂàáÊç¢Â±ïÂºÄÁä∂ÊÄÅ
            const item = targetArray.find(item => item.path === path)
            if (item && item.isExpandable) {
                // ÁÆÄÂçïÁöÑ‰∫åÁ∫ßÂàáÊç¢ÔºöÊäòÂè† <-> Â±ïÂºÄ
                item.expanded = !item.expanded
                item.displayValue = item.expanded ? item.expandedValue : item.collapsedValue

                console.log('Toggle state:', {
                    path: path,
                    expanded: item.expanded
                })
            }
        },

        closeInfoModal() {
            this.showInfoModal = false
            this.currentComponentInfo = null
        },

        preventClose() {
            // ÈòªÊ≠¢‰∫ã‰ª∂ÂÜíÊ≥°ÔºåÈò≤Ê≠¢ÁÇπÂáªÂºπÁ™óÂÜÖÂÆπÊó∂ÂÖ≥Èó≠
        },

        // ÈòªÊ≠¢Â§çÂà∂ÊåâÈíÆËß¶ÂèëÂ±ïÂºÄ/Êî∂Ëµ∑
        preventToggle(e) {
            // ÈòªÊ≠¢‰∫ã‰ª∂ÂÜíÊ≥°
        },

        // Â§çÂà∂Â±ûÊÄßÂÄº
        copyPropertyValue(e) {
            const { value, key, type } = e.currentTarget.dataset

            try {
                // Âú®Â∞èÁ®ãÂ∫è‰∏≠‰ΩøÁî® mpx.setClipboardData Êù•Â§çÂà∂ÂÜÖÂÆπ
                mpx.setClipboardData({
                    data: value || '',
                    success: () => {
                        mpx.showToast({
                            title: `Â∑≤Â§çÂà∂${key}`,
                            icon: 'success',
                            duration: 1500
                        })
                    },
                    fail: (error) => {
                        console.error('Â§çÂà∂Â§±Ë¥•:', error)
                        mpx.showToast({
                            title: 'Â§çÂà∂Â§±Ë¥•',
                            icon: 'none',
                            duration: 1500
                        })
                    }
                })
            } catch (error) {
                console.error('Â§çÂà∂Êìç‰ΩúÂºÇÂ∏∏:', error)
                mpx.showToast({
                    title: 'Â§çÂà∂ÂäüËÉΩ‰∏çÂèØÁî®',
                    icon: 'none',
                    duration: 1500
                })
            }
        },

        formatTime(date) {
            const hours = date.getHours().toString().padStart(2, '0')
            const minutes = date.getMinutes().toString().padStart(2, '0')
            const seconds = date.getSeconds().toString().padStart(2, '0')
            return `${hours}:${minutes}:${seconds}`
        },

        // Ê†ºÂºèÂåñÊñá‰ª∂ÂêçÊòæÁ§∫
        getDisplayFileName(fileSrc = '') {
            if (!fileSrc) {
                return 'Êú™Áü•ÁªÑ‰ª∂'
            }

            // ÊèêÂèñÊñá‰ª∂ÂêçÔºàÂéªÊéâË∑ØÂæÑÔºâ
            const fileName = fileSrc.split('/').pop()
            // Â¶ÇÊûúÊ≤°ÊúâÊñá‰ª∂ÂêçÊàñËÄÖÊñá‰ª∂Âêç‰∏∫Á©∫ÔºåËøîÂõûÈªòËÆ§ÂÄº
            if (!fileName || fileName.trim() === '') {
                return 'Êú™Áü•ÁªÑ‰ª∂'
            }

            return fileName
        },

        // Â§ÑÁêÜËøáÊª§ËæìÂÖ•
        onFilterInput(e) {
            this.filterText = e.detail.value
            this.dataSearchResults.clear()
            this.updateVisibleNodes()
        },

        // Â§ÑÁêÜÁ°ÆËÆ§ËæìÂÖ•
        onFilterConfirm(e) {
            this.filterText = e.detail.value
            this.dataSearchResults.clear()
            this.updateVisibleNodes()
        },

        // Ê∏ÖÈô§ËøáÊª§
        clearFilter() {
            this.filterText = ''
            this.dataSearchResults.clear()
            this.updateVisibleNodes()
        },

        // ÊâßË°åÁªÑÂêàÊêúÁ¥¢ÔºàÂêåÊó∂ÊêúÁ¥¢ÁªÑ‰ª∂ÂêçÁß∞ÂíåÊï∞ÊçÆÂÄºÔºâ
        performCombinedSearch() {
            if (!this.filterText || !this.componentTree) {
                this.dataSearchResults.clear()
                return
            }

            const searchText = this.filterText.toLowerCase()
            const results = new Map()

            // ÈÄíÂΩíÊêúÁ¥¢ÁªÑ‰ª∂Ê†ë
            const searchInComponent = (treeNode, path = []) => {
                if (!treeNode || !treeNode.component) return

                const component = treeNode.component
                const fileSrc = component.MpxDevtoolsComponentInfo?.__mpx_file_src__
                if (!fileSrc) return

                const currentPath = [...path, fileSrc]
                let hasDirectMatch = false
                let matchedProperties = []

                // ÊêúÁ¥¢ÁªÑ‰ª∂ÁöÑ data, props, computed
                const searchInProperties = (obj, type) => {
                    if (!obj) return []
                    const matches = []

                    Object.keys(obj).forEach(key => {
                        const value = component[key]
                        if (this.searchInValue(value, searchText)) {
                            matches.push(`${type}.${key}`)
                        }
                    })
                    return matches
                }

                // ÊêúÁ¥¢ÂêÑÁßçÂ±ûÊÄß
                const dataMatches = searchInProperties(component.MpxDevtoolsComponentInfo?.data || {}, 'data')
                const propsMatches = searchInProperties(component.MpxDevtoolsComponentInfo?.props || {}, 'props')
                const computedMatches = searchInProperties(component.MpxDevtoolsComponentInfo?.computed || {}, 'computed')

                matchedProperties = [...dataMatches, ...propsMatches, ...computedMatches]
                hasDirectMatch = matchedProperties.length > 0

                // Â¶ÇÊûúÂΩìÂâçÁªÑ‰ª∂ÊúâÂåπÈÖçÔºåÊ†áËÆ∞Êï¥‰∏™Ë∑ØÂæÑ
                if (hasDirectMatch) {
                    currentPath.forEach(pathFileSrc => {
                        if (!results.has(pathFileSrc)) {
                            results.set(pathFileSrc, {
                                hasMatch: false,
                                isInPath: false,
                                matchedProperties: []
                            })
                        }
                        const existingResult = results.get(pathFileSrc)
                        existingResult.isInPath = true

                        // Â¶ÇÊûúÊòØÂΩìÂâçÁªÑ‰ª∂ÔºåÊ†áËÆ∞‰∏∫ÊúâÁõ¥Êé•ÂåπÈÖç
                        if (pathFileSrc === fileSrc) {
                            existingResult.hasMatch = true
                            existingResult.matchedProperties = matchedProperties
                        }
                    })
                }

                // ÈÄíÂΩíÊêúÁ¥¢Â≠êÁªÑ‰ª∂
                if (treeNode.children) {
                    treeNode.children.forEach(child => {
                        searchInComponent(child, currentPath)
                    })
                }
            }

            searchInComponent(this.componentTree)
            this.dataSearchResults = results
        },

        // Âú®ÂÄº‰∏≠ÊêúÁ¥¢ÊñáÊú¨
        searchInValue(value, searchText) {
            if (value === null || value === undefined) {
                return false
            }

            if (typeof value === 'string') {
                return value.toLowerCase().includes(searchText)
            }

            if (typeof value === 'number' || typeof value === 'boolean') {
                return String(value).toLowerCase().includes(searchText)
            }

            if (Array.isArray(value)) {
                return value.some(item => this.searchInValue(item, searchText)) ||
                    JSON.stringify(value).toLowerCase().includes(searchText)
            }

            if (typeof value === 'object') {
                try {
                    return JSON.stringify(value).toLowerCase().includes(searchText) ||
                        Object.keys(value).some(key =>
                            key.toLowerCase().includes(searchText) ||
                            this.searchInValue(value[key], searchText)
                        )
                } catch (error) {
                    return false
                }
            }

            return false
        }
    },

    [MOUNTED]() {
        console.debug('MPX DevTools component mounted')
        this.osimEnv = mpx.getStorageSync('osimEnv') || '000'
        this.osimEnvInput = this.osimEnv
        // Âä†ËΩΩÂ≠òÂÇ®ÁöÑËÆæÁΩÆ
        this.loadFromStorage()
        // Âª∂ËøüÂàùÂßãÂåñÔºåÁ≠âÂæÖ MPX DevTools API ÂáÜÂ§áÂ∞±Áª™
        const initDevTools = () => {
            if (mpx.mpxDevTools && typeof mpx.mpxDevTools.getInstanceTreeRoot === 'function') {
                console.debug('MPX DevTools API is ready, initializing...')
                this.updateComponentTree()

                // ËÆæÁΩÆÂÆöÊó∂Âô®ÔºåÂÆöÊúüÂà∑Êñ∞ÁªÑ‰ª∂Ê†ë
                this.timer = setInterval(() => {
                    this.updateComponentTree()
                }, 10000) // ÊØè10ÁßíËá™Âä®Âà∑Êñ∞‰∏ÄÊ¨°
            } else {
                mpx_devtools.mixin(mpxDevToolsMixin_devtools)
                console.debug('MPX DevTools API not ready, retrying...')
                // Â¶ÇÊûúAPIËøòÊ≤°ÂáÜÂ§áÂ•ΩÔºå5ÁßíÂêéÈáçËØï
                setTimeout(initDevTools, 5000)
            }
        }

        // Á´ãÂç≥Â∞ùËØïÂàùÂßãÂåñ
        initDevTools()
    },

    [BEFOREUNMOUNT]() {
        this.clearTimer()
    },
    [UNMOUNTED]() {
        this.clearTimer()
    },
    [ONHIDE]() {
        this.clearTimer()

    },
    watch: {
        // ÁõëÂê¨ÊäòÂè†Áä∂ÊÄÅÂèòÂåñÔºå‰øùÂ≠òÂà∞Â≠òÂÇ®
        isCollapsed(newVal) {
            this.osimEnvInput = this.osimEnv

        },
    },
    computed: {
        tabList() {
            return [
                { key: 'props', label: `Props (${this.currentComponentInfo ? this.currentComponentInfo.propsCount : 0})` },
                { key: 'data', label: `Data (${this.currentComponentInfo ? this.currentComponentInfo.dataCount : 0})` },
                { key: 'computed', label: `Computed (${this.currentComponentInfo ? this.currentComponentInfo.computedCount : 0})` },
            ]
        },
        visibleNodesWithDisplayName() {
            return this.visibleNodes.map(item => ({
                ...item,
                displayFileName: this.getDisplayFileName(item.fileSrc)
            })).filter(item => item.displayFileName !== 'Êú™Áü•ÁªÑ‰ª∂')
        }
    },
})
</script>

<style lang="stylus">
/* ==============================================
1. Âü∫Á°ÄÂÆπÂô®Ê†∑ÂºèÔºàÊ†πÂÆπÂô®Ôºâ
============================================== */
.mpx-devtools-container
    padding 20rpx
    background linear-gradient(135deg, #f0f8ff 0%, #e6f3ff 100%)
    transition all 0.3s ease
    display flex
    flex-direction column

/* ÂÆπÂô®‰øÆÊîπÂô®ÔºöÊäòÂè†Áä∂ÊÄÅ */
.mpx-devtools-container--collapsed
    width max-content
    padding 0rpx !important
    height auto !important
    overflow scroll
    max-width 360rpx

/* ÂÆπÂô®‰øÆÊîπÂô®ÔºöÊÇ¨ÊµÆÁä∂ÊÄÅ */
.mpx-devtools-container--floating
    position fixed
    z-index 1000
    box-shadow 0 8rpx 32rpx rgba(0, 0, 0, 0.2)
    border-radius 20rpx
    backdrop-filter blur(20rpx)
    border 2rpx solid rgba(66, 153, 225, 0.3)
    overflow hidden

/* ==============================================
2. Â§¥ÈÉ®Âå∫ÂüüÊ†∑ÂºèÔºàHeaderÔºâ
============================================== */
.mpx-devtools-header
    background linear-gradient(135deg, #4299e1 0%, #3182ce 100%)
    padding 24rpx
    border-radius 16rpx
    box-shadow 0 8rpx 32rpx rgba(66, 153, 225, 0.3)
    color white
    transition all 0.3s ease
    position relative

/* Â§¥ÈÉ®‰øÆÊîπÂô®ÔºöÊäòÂè†Áä∂ÊÄÅ */
.mpx-devtools-header--collapsed
    padding 20rpx 30rpx
    margin-bottom 0rpx
    box-shadow 0 4rpx 16rpx rgba(66, 153, 225, 0.2)

/* Â§¥ÈÉ®È°∂ÈÉ®ÂÆπÂô®ÔºàÊ†áÈ¢ò+Áä∂ÊÄÅÂå∫Ôºâ */
.mpx-devtools-header__top
    display flex
    justify-content space-between
    align-items center
    transition margin-bottom 0.3s ease

/* ÊäòÂè†Áä∂ÊÄÅ‰∏ãÁöÑÈ°∂ÈÉ®ÂÆπÂô® */
.mpx-devtools-header--collapsed .mpx-devtools-header__top
    margin-bottom 0

/* Ê†áÈ¢òÂå∫Âüü */
.mpx-devtools-title-section
    flex 1
    min-width 0
    overflow hidden

/* Ê†áÈ¢òÊñáÊú¨ */
.mpx-devtools-title
    font-size 36rpx
    font-weight 600
    color white
    display block
    margin-bottom 8rpx
    letter-spacing 1rpx
    transition all 0.3s ease
    white-space nowrap
    overflow hidden
    text-overflow ellipsis

/* ÊäòÂè†Áä∂ÊÄÅ‰∏ãÁöÑÊ†áÈ¢ò */
.mpx-devtools-header--collapsed .mpx-devtools-title
    font-size 28rpx
    margin-bottom 0

/* Áä∂ÊÄÅÂå∫ÂüüÔºàÂà∑Êñ∞+ÊäòÂè†ÊåâÈíÆÔºâ */
.mpx-devtools-status-section
    display flex
    flex-direction column
    align-items flex-end
    gap 12rpx

/* ÊäòÂè†Áä∂ÊÄÅ‰∏ãÁöÑÁä∂ÊÄÅÂå∫Âüü */
.mpx-devtools-header--collapsed .mpx-devtools-status-section
    flex-direction row
    align-items center
    gap 0

/* ÊãñÊãΩÊåáÁ§∫Âô® */
.mpx-devtools-drag-indicator
    position absolute
    top 8rpx
    left 50%
    transform translateX(-50%)
    display flex
    align-items center
    justify-content center
    width 60rpx
    height 12rpx
    border-radius 6rpx
    background rgba(255, 255, 255, 0.4)
    cursor grab

.mpx-devtools-drag-indicator:active
    cursor grabbing

/* ÊãñÊãΩÂõæÊ†á */
.mpx-devtools-drag-icon
    font-size 16rpx
    color rgba(255, 255, 255, 0.8)
    line-height 1
    letter-spacing 2rpx

/* Âà∑Êñ∞ÊåâÈíÆÊñáÊú¨ */
.mpx-devtools-update-time
    font-size 22rpx
    color rgba(255, 255, 255, 0.9)
    background rgba(255, 255, 255, 0.15)
    padding 8rpx 12rpx
    border-radius 20rpx
    backdrop-filter blur(10rpx)

/* ÊäòÂè†ÊåâÈíÆ */
.mpx-devtools-collapse-btn
    display flex
    align-items center
    gap 8rpx
    background rgba(255, 255, 255, 0.2)
    border-radius 24rpx
    padding 8rpx 16rpx
    margin-left 16rpx
    backdrop-filter blur(10rpx)
    border 1rpx solid rgba(255, 255, 255, 0.3)
    transition all 0.3s ease
    cursor pointer

.mpx-devtools-collapse-btn:active
    transform scale(0.95)
    background rgba(255, 255, 255, 0.3)

/* ÊäòÂè†ÊåâÈíÆÂõæÊ†á */
.mpx-devtools-collapse-btn__icon
    font-size 24rpx
    line-height 1
    transition transform 0.3s ease

/* ÊäòÂè†ÊåâÈíÆÊñáÊú¨ */
.mpx-devtools-collapse-btn__text
    font-size 22rpx
    color rgba(255, 255, 255, 0.95)
    font-weight 500

/* ==============================================
3. ËøáÊª§Âå∫ÂüüÊ†∑ÂºèÔºàFilterÔºâ
============================================== */
.mpx-devtools-filter-container
    background rgba(255, 255, 255, 0.15)
    border-radius 4rpx
    padding 16rpx 0
    backdrop-filter blur(10rpx)
    border 1rpx solid rgba(255, 255, 255, 0.2)

/* ËøáÊª§ËæìÂÖ•ÂÆπÂô® */
.mpx-devtools-filter-wrapper
    display flex
    align-items center
    background rgba(255, 255, 255, 0.9)
    border-radius 18rpx
    padding 4rpx 8rpx 4rpx 16rpx
    box-shadow 0 4rpx 16rpx rgba(0, 0, 0, 0.1)

/* ËøáÊª§ÂõæÊ†á */
.mpx-devtools-filter-wrapper__icon
    font-size 28rpx
    margin-right 12rpx
    color #666

/* ËøáÊª§ËæìÂÖ•Ê°Ü */
.mpx-devtools-filter-wrapper__input
    flex 1
    height 48rpx
    padding 0 12rpx
    font-size 26rpx
    background-color transparent
    border none
    color #333
    outline none

.mpx-devtools-filter-wrapper__input::placeholder
    color #999

/* ËøáÊª§Ê∏ÖÈô§ÊåâÈíÆ */
.mpx-devtools-filter-wrapper__clear-btn
    width 36rpx
    height 36rpx
    display flex
    align-items center
    justify-content center
    margin-left 8rpx
    background rgba(0, 0, 0, 0.1)
    border-radius 50%
    flex-shrink 0
    transition all 0.3s ease

.mpx-devtools-filter-wrapper__clear-btn:active
    background rgba(0, 0, 0, 0.2)
    transform scale(0.9)

/* Ê∏ÖÈô§ÊåâÈíÆÂõæÊ†á */
.mpx-devtools-filter-wrapper__clear-icon
    font-size 20rpx
    color #666
    line-height 1
    font-weight bold

/* ==============================================
4. ‰∏ª‰ΩìÂÜÖÂÆπÂå∫Ê†∑ÂºèÔºàMainÔºâ
============================================== */
.mpx-devtools-main
    height 100%
    overflow hidden

/* ÁªÑ‰ª∂Ê†ëÂÆπÂô® */
.mpx-devtools-tree-container
    background linear-gradient(135deg, #f0f8ff 0%, #e6f3ff 100%)
    border-radius 16rpx
    padding 20rpx
    box-shadow 0 4rpx 20rpx rgba(66, 153, 225, 0.15)
    border 2rpx solid rgba(66, 153, 225, 0.2)
    overflow scroll
    height 100%

/* Á©∫Áä∂ÊÄÅÔºàÊó†ÁªÑ‰ª∂Êï∞ÊçÆÔºâ */
.mpx-devtools-empty-state
    background linear-gradient(135deg, #f0f8ff 0%, #e6f3ff 100%)
    border-radius 8rpx
    padding 10rpx 5rpx
    text-align center
    border 2rpx dashed rgba(66, 153, 225, 0.4)
    margin-top 10rpx

/* Á©∫Áä∂ÊÄÅÊñáÊú¨ */
.mpx-devtools-empty-state__text
    font-size 30rpx
    color #2d74d8
    font-weight 400
    display block
    margin-bottom 2rpx

/* Á©∫Áä∂ÊÄÅÊèêÁ§∫ */
.mpx-devtools-empty-state__hint
    font-size 26rpx
    color #4299e1
    display block
    opacity 0.8

/* ==============================================
5. Ê†ëËäÇÁÇπÊ†∑ÂºèÔºàTree NodeÔºâ
============================================== */
.mpx-devtools-tree-node
    padding 12rpx 0
    border-bottom 1rpx solid rgba(66, 153, 225, 0.15)
    white-space nowrap
    display inline-block
    min-width 100%
    width max-content

.mpx-devtools-tree-node:last-child
    border-bottom none

/* ËäÇÁÇπÂÜÖÂÆπÂÆπÂô® */
.mpx-devtools-tree-node__content
    display inline-flex
    align-items center
    min-width 100%
    width max-content

/* ËäÇÁÇπÊäòÂè†ÊåâÈíÆ */
.mpx-devtools-tree-node__collapse-btn
    width 40rpx
    height 40rpx
    display flex
    align-items center
    justify-content center
    margin-right 10rpx
    background linear-gradient(135deg, #e6f3ff 0%, #f0f8ff 100%)
    border 1rpx solid rgba(66, 153, 225, 0.3)
    border-radius 50%
    flex-shrink 0
    transition all 0.3s ease

.mpx-devtools-tree-node__collapse-btn:active
    transform scale(0.95)
    background linear-gradient(135deg, #dbeafe 0%, #e6f3ff 100%)

/* ÊäòÂè†ÊåâÈíÆÂõæÊ†á */
.mpx-devtools-tree-node__collapse-icon
    font-size 24rpx
    color #2d74d8
    font-weight bold
    line-height 1

/* ËäÇÁÇπ‰ø°ÊÅØÊåâÈíÆ */
.mpx-devtools-tree-node__info-btn
    width 40rpx
    height 40rpx
    display flex
    align-items center
    justify-content center
    margin-right 10rpx
    background linear-gradient(135deg, #e6f3ff 0%, #f0f8ff 100%)
    border 1rpx solid rgba(66, 153, 225, 0.3)
    border-radius 50%
    flex-shrink 0
    transition all 0.3s ease

.mpx-devtools-tree-node__info-btn:active
    transform scale(0.95)
    background linear-gradient(135deg, #dbeafe 0%, #e6f3ff 100%)

/* ‰ø°ÊÅØÊåâÈíÆÂõæÊ†á */
.mpx-devtools-tree-node__info-icon
    font-size 24rpx
    color #2d74d8
    font-weight bold
    line-height 1

/* ËäÇÁÇπÊñá‰ª∂ÂÆπÂô® */
.mpx-devtools-tree-node__file-container
    flex-shrink 0
    white-space nowrap
    flex 1
    display flex
    flex-direction column
    align-items flex-start

/* ËäÇÁÇπÊñáÊú¨ */
.mpx-devtools-tree-node__text
    font-size 26rpx
    color #2c5282
    font-family 'Monaco', 'Menlo', 'Ubuntu Mono', monospace
    white-space nowrap
    font-weight 500
    text-shadow 0 1rpx 2rpx rgba(66, 153, 225, 0.1)
    transition color 0.3s ease

/* ËäÇÁÇπÊñáÊú¨‰øÆÊîπÂô®ÔºöÈ´ò‰∫ÆÔºàÊêúÁ¥¢ÂåπÈÖçÔºâ */
.mpx-devtools-tree-node__text--highlighted
    color #dc2626
    font-weight 600
    text-shadow 0 1rpx 2rpx rgba(220, 38, 38, 0.2)

/* ÂåπÈÖçÂ±ûÊÄßÂÆπÂô® */
.mpx-devtools-tree-node__matched-properties
    display flex
    flex-wrap wrap
    margin-top 6rpx
    gap 8rpx

/* ÂåπÈÖçÂ±ûÊÄßÊñáÊú¨ */
.mpx-devtools-tree-node__matched-prop
    font-size 20rpx
    color #dc2626
    background rgba(220, 38, 38, 0.1)
    padding 2rpx 8rpx
    border-radius 4rpx
    border 1rpx solid rgba(220, 38, 38, 0.3)
    font-family 'Monaco', 'Menlo', 'Ubuntu Mono', monospace
    font-weight 500

/* ==============================================
6. ÂºπÁ™óÊ†∑ÂºèÔºàModalÔºâ
============================================== */
/* ÂºπÁ™óÈÅÆÁΩ© */
.mpx-devtools-modal-overlay
    position fixed
    top 0
    left 0
    right 0
    bottom 0
    background-color rgba(0, 0, 0, 0.5)
    z-index 99999
    display flex
    align-items center
    justify-content center

/* ÂºπÁ™óÂÆπÂô® */
.mpx-devtools-modal
    background-color #fff
    border-radius 20rpx
    width 90%
    max-width 700rpx
    max-height 60vh
    overflow hidden
    z-index 99999
    box-shadow 0 10rpx 30rpx rgba(0, 0, 0, 0.3)

/* ÂºπÁ™óÂ§¥ÈÉ® */
.mpx-devtools-modal__header
    background linear-gradient(135deg, #f0f8ff 0%, #e6f3ff 100%)
    padding 30rpx
    border-bottom 2rpx solid rgba(66, 153, 225, 0.2)
    display flex
    justify-content space-between
    align-items center

/* ÂºπÁ™óÊ†áÈ¢ò */
.mpx-devtools-modal__title
    font-size 32rpx
    font-weight 600
    color #2c5282

/* ÂºπÁ™óÂÖ≥Èó≠ÊåâÈíÆ */
.mpx-devtools-modal__close-btn
    width 50rpx
    height 50rpx
    display flex
    align-items center
    justify-content center
    background linear-gradient(135deg, #e6f3ff 0%, #f0f8ff 100%)
    border 1rpx solid rgba(66, 153, 225, 0.3)
    border-radius 50%
    transition all 0.3s ease

.mpx-devtools-modal__close-btn:active
    transform scale(0.95)
    background linear-gradient(135deg, #dbeafe 0%, #e6f3ff 100%)

/* ÂÖ≥Èó≠ÊåâÈíÆÂõæÊ†á */
.mpx-devtools-modal__close-icon
    font-size 40rpx
    padding-bottom 8rpx
    color #2d74d8
    line-height 1

/* ÂºπÁ™óÂÜÖÂÆπ */
.mpx-devtools-modal__content
    padding 30rpx
    max-height 60vh

/* ÁªÑ‰ª∂Ë∑ØÂæÑÂÆπÂô® */
.mpx-devtools-component-path
    margin-bottom 30rpx
    display flex
    align-items center
    padding 20rpx
    background linear-gradient(135deg, #f0f8ff 0%, #e6f3ff 100%)
    border-radius 12rpx
    border 1rpx solid rgba(66, 153, 225, 0.2)

/* Ë∑ØÂæÑÊ†áÁ≠æ */
.mpx-devtools-component-path__label
    font-size 24rpx
    color #2d74d8
    margin-right 10rpx
    white-space nowrap
    font-weight 500

/* Ë∑ØÂæÑÊñáÊú¨ */
.mpx-devtools-component-path__text
    font-size 24rpx
    color #2c5282
    font-family 'Monaco', 'Menlo', 'Ubuntu Mono', monospace
    word-break break-all
    font-weight 500

/* ==============================================
7. ÂºπÁ™óSectionÊ†∑ÂºèÔºàProps/DataÂå∫ÂüüÔºâ
============================================== */
.mpx-devtools-section
    margin-bottom 30rpx
    overflow-y auto
    height 35vh

/* SectionÂ§¥ÈÉ® */
.mpx-devtools-section__header
    margin-bottom 20rpx
    padding-bottom 10rpx
    border-bottom 2rpx solid rgba(66, 153, 225, 0.2)

/* SectionÊ†áÈ¢ò */
.mpx-devtools-section__title
    font-size 28rpx
    font-weight 600
    color #2d74d8

/* SectionÂÜÖÂÆπ */
.mpx-devtools-section__content
    background linear-gradient(135deg, #fdfeff 0%, #f8fcff 100%)
    border-radius 12rpx
    padding 24rpx
    border 1rpx solid rgba(66, 153, 225, 0.2)

/* ==============================================
9. Â§çÂà∂ÊåâÈíÆÊ†∑ÂºèÔºàCopy BtnÔºâ
============================================== */
.mpx-devtools-copy-btn
    margin-right 8rpx
    cursor pointer

/* Â§çÂà∂ÊåâÈíÆ‰øÆÊîπÂô®ÔºöÂèØÂ±ïÂºÄÂ±ûÊÄß‰∏≠ */
.mpx-devtools-copy-btn--expandable
    margin-right 12rpx

/* Â§çÂà∂ÊåâÈíÆÂõæÊ†á */
.mpx-devtools-copy-btn__icon
    font-size 22rpx
    color #666
    cursor pointer
    transition color 0.3s ease

.mpx-devtools-copy-btn:hover .mpx-devtools-copy-btn__icon
    color #1890ff

/* ==============================================
10. Êãâ‰º∏ÊéßÂà∂Âô®Ê†∑ÂºèÔºàResizeÔºâ
============================================== */
.mpx-devtools-resize-controls
    position absolute
    width 100%
    height 100%
    pointer-events none
    top 0
    left 0

/* Êãâ‰º∏ÊâãÊüÑ */
.mpx-devtools-resize-handle
    position absolute
    width 50rpx
    height 50rpx
    background linear-gradient(135deg, #e6f3ff 0%, #f0f8ff 100%)
    border 2rpx solid rgba(66, 153, 225, 0.5)
    border-radius 50%
    display flex
    align-items center
    justify-content center
    cursor se-resize
    pointer-events auto
    transition all 0.3s ease
    z-index 10

.mpx-devtools-resize-handle:active
    transform scale(1.1)
    background linear-gradient(135deg, #dbeafe 0%, #e6f3ff 100%)
    border-color rgba(66, 153, 225, 0.8)

/* Êãâ‰º∏ÊâãÊüÑ‰øÆÊîπÂô®ÔºöÂè≥‰∏ãËßí */
.mpx-devtools-resize-handle--br
    bottom -5rpx
    right -5rpx

/* Êãâ‰º∏ÂõæÊ†á */
.mpx-devtools-resize-handle__icon
    font-size 20rpx
    color #2d74d8
    font-weight bold
    line-height 1

/* ==============================================
11. ÁéØÂ¢ÉËÆæÁΩÆÂå∫ÂüüÊ†∑ÂºèÔºàEnvÔºâ
============================================== */
.mpx-devtools-env
    display flex
    flex-wrap nowrap
    align-items center
    gap 12rpx
    padding 5rpx 10rpx
    background rgba(255, 255, 255, 0.04)
    border-radius 12rpx
    margin-top 12rpx
    border 1rpx solid rgba(255, 255, 255, 0.06)

.mpx-devtools-env__label
    font-size 28rpx
    margin-left 5rpx
    display flex
    align-items center

.mpx-devtools-env__controls
    display flex
    flex 1
    align-items center

/* ‰ºòÂåñÁéØÂ¢ÉËæìÂÖ•Êéß‰ª∂ÔºöËæìÂÖ•Ê°ÜÂíåÊåâÈíÆ */
.mpx-devtools-env__input
    height 50rpx
    min-width 160rpx
    width 40%
    padding 0 14rpx
    font-size 26rpx
    border-radius 8rpx
    border 1rpx solid rgba(66, 153, 225, 0.12)
    background rgba(240, 240, 240, 0.95)
    color #222
    outline none
    margin 0 20rpx 0 10rpx
    transition all 0.18s ease
    box-shadow 0 2rpx 6rpx rgba(0, 0, 0, 0.04)

.mpx-devtools-env__input:focus
    border-color rgba(66, 153, 225, 0.28)
    box-shadow 0 4rpx 12rpx rgba(66, 153, 225, 0.08)

.mpx-devtools-env__btn
    height 56rpx
    margin-left 12rpx
    border-radius 10rpx
    background linear-gradient(135deg, #38a3f5 0%, #2b82d6 100%)
    color #fff
    font-size 26rpx
    font-weight 600
    display flex
    justify-content center
    align-items center
    margin-bottom 8rpx
    border none
    box-shadow 0 6rpx 18rpx rgba(43, 130, 214, 0.22)
    cursor pointer
    transition transform 0.14s ease, box-shadow 0.14s ease, opacity 0.14s ease

.mpx-devtools-env__btn:active
    transform translateY(1rpx) scale(0.995)
    box-shadow 0 4rpx 12rpx rgba(43, 130, 214, 0.18)

/* Âú®Â∞èÂ∞∫ÂØ∏ÂÆπÂô®‰∏≠ÂÖÅËÆ∏Êç¢Ë°åÊòæÁ§∫ÔºåÈÅøÂÖçÊ∫¢Âá∫ */
@media (max-width 420px)
    .mpx-devtools-env
        flex-wrap wrap

    .mpx-devtools-env__input
        width 100%
        min-width 0

    .mpx-devtools-env__btn
        width 100%
        margin-left 0
        margin-top 8rpx
</style>